"use strict";(self.webpackChunk_microsoft_fast_site=self.webpackChunk_microsoft_fast_site||[]).push([[38908],{3598:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var o=n(31085),r=n(71184);const s={id:"working-without-decorators",title:"Working without Decorators",sidebar_label:"Working without Decorators",keywords:["decorators"]},a=void 0,i={id:"advanced/working-without-decorators",title:"Working without Decorators",description:"Most of our documented examples include the use of TypeScript decorators. However, as decorators are an unimplemented feature in JavaScript, using them may not be right for your project. See TypeScript documentation for details on our implementation.",source:"@site/docs/advanced/working-without-decorators.md",sourceDirName:"advanced",slug:"/advanced/working-without-decorators",permalink:"/docs/advanced/working-without-decorators",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"working-without-decorators",title:"Working without Decorators",sidebar_label:"Working without Decorators",keywords:["decorators"]},sidebar:"docs",previous:{title:"Working with Custom Elements",permalink:"/docs/advanced/working-with-custom-elements"},next:{title:"Dependency Injection",permalink:"/docs/advanced/dependency-injection"}},c={},d=[];function l(e){const t={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Most of our documented examples include the use of TypeScript decorators. However, as decorators are an unimplemented feature in JavaScript, using them may not be right for your project. See ",(0,o.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/decorators.html",children:"TypeScript documentation"})," for details on our implementation."]}),"\n",(0,o.jsx)(t.p,{children:"When defining your component, you may pass in attributes in the same configuration object as the name, template, and styles:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:"import { FASTElement, html, css } from '@microsoft/fast-element';\n\nexport class MyElement extends FASTElement {\n  // component logic\n}\n\nMyElement.define({\n    name: 'my-element',\n    template: html`<div>${(x) => x.count}</div>`,\n    styles: css`div { background: red }`,\n    attributes: ['count'],\n});\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:'<my-element count="42">\n'})}),"\n",(0,o.jsxs)(t.p,{children:["This accepts the same configuration options as the ",(0,o.jsx)(t.code,{children:"@attr"})," so for example to bind a property name that is different from an attribute name:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:"import { FASTElement, html, css } from '@microsoft/fast-element';\n\nexport class MyElement extends FASTElement {\n  constructor() {\n    super();\n\n    this.currentCount = 42;\n  }\n}\n\nMyElement.define({\n  name: 'my-element',\n  template: html`<div>${(x) => x.currentCount}</div>`,\n  styles: css`div { background: red }`,\n  attributes: [\n    {\n      attribute: 'current-count',\n      property: 'currentCount'\n    },\n  ],\n});\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:'<my-element current-count="42">\n'})}),"\n",(0,o.jsxs)(t.admonition,{type:"note",children:[(0,o.jsxs)(t.p,{children:["In the above example we are setting the ",(0,o.jsx)(t.code,{children:"currentCount"})," in the constructor and not as a class initializer, this is due to a difference in how decorators are elevated and initialized."]}),(0,o.jsx)(t.p,{children:"If you need to add a converter to your attribute:"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:"import { FASTElement, html, css } from '@microsoft/fast-element';\n\nconst converter = {\n  toView: (value) => {\n    return value / 2;\n  },\n  fromView: (value) => {\n    return value / 2;\n  },\n};\n\nexport class MyElement extends FASTElement {\n  constructor() {\n    super();\n\n    this.currentCount = 42;\n  }\n}\n\nMyElement.define({\n  name: 'my-element',\n  template: html`<div>${(x) => x.currentCount}</div>`,\n  styles: css`div { background: red }`,\n  attributes: [\n    {\n      attribute: 'current-count',\n      property: 'currentCount',\n      converter\n    },\n  ],\n});\n"})})]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},71184:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var o=n(14041);const r={},s=o.createContext(r);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);