"use strict";(self.webpackChunk_microsoft_fast_site=self.webpackChunk_microsoft_fast_site||[]).push([[14316],{97926:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=s(31085),o=s(71184);const i={id:"design-tokens",title:"Design Tokens",sidebar_label:"Design Tokens",custom_edit_url:"https://github.com/microsoft/fast/edit/main/sites/website/versioned_docs/version-legacy/design-systems/design-tokens.md",description:"The FAST Design Token implementation is designed to provide first-class support for Design Tokens and make setting, getting, and using Design Tokens simple.",keywords:["design tokens"]},r=void 0,a={id:"design-systems/design-tokens",title:"Design Tokens",description:"The FAST Design Token implementation is designed to provide first-class support for Design Tokens and make setting, getting, and using Design Tokens simple.",source:"@site/versioned_docs/version-1.x/design-systems/design-tokens.md",sourceDirName:"design-systems",slug:"/design-systems/design-tokens",permalink:"/docs/1.x/design-systems/design-tokens",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/fast/edit/main/sites/website/versioned_docs/version-legacy/design-systems/design-tokens.md",tags:[],version:"1.x",frontMatter:{id:"design-tokens",title:"Design Tokens",sidebar_label:"Design Tokens",custom_edit_url:"https://github.com/microsoft/fast/edit/main/sites/website/versioned_docs/version-legacy/design-systems/design-tokens.md",description:"The FAST Design Token implementation is designed to provide first-class support for Design Tokens and make setting, getting, and using Design Tokens simple.",keywords:["design tokens"]},sidebar:"docs",previous:{title:"Creating a Component Library",permalink:"/docs/1.x/design-systems/creating-a-component-library"},next:{title:"High Contrast",permalink:"/docs/1.x/design-systems/high-contrast"}},l={},c=[{value:"What is a Design Token",id:"what-is-a-design-token",level:2},{value:"FAST Frame Design Tokens",id:"fast-frame-design-tokens",level:2},{value:"Create a Token",id:"create-a-token",level:2},{value:"Setting Values",id:"setting-values",level:2},{value:"Setting a Default Value",id:"setting-a-default-value",level:2},{value:"Getting Values",id:"getting-values",level:2},{value:"Deleting Values",id:"deleting-values",level:2},{value:"CSS Custom Property Emission",id:"css-custom-property-emission",level:2},{value:"DesignToken Root Registration",id:"designtoken-root-registration",level:3},{value:"Usage With DesignSystem",id:"usage-with-designsystem",level:4},{value:"Customizing CSS Custom Property Name",id:"customizing-css-custom-property-name",level:3},{value:"Preventing CSS Custom Property Emission",id:"preventing-css-custom-property-emission",level:3},{value:"Values with a &#39;createCSS&#39; method",id:"values-with-a-createcss-method",level:3},{value:"Subscription",id:"subscription",level:2},{value:"Using Design Tokens in CSS",id:"using-design-tokens-in-css",level:2},{value:"Derived Design Token Values",id:"derived-design-token-values",level:2},{value:"Aliasing Design Tokens",id:"aliasing-design-tokens",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"The FAST Design Token implementation is designed to provide first-class support for Design Tokens and make setting, getting, and using Design Tokens simple."}),"\n",(0,t.jsx)(n.h2,{id:"what-is-a-design-token",children:"What is a Design Token"}),"\n",(0,t.jsxs)(n.p,{children:["A Design Token is a semantic, named variable used to describe a Design System. They often describe design concepts like typography, color, sizes, UI spacing, etc. FAST encourages checking out ",(0,t.jsx)(n.a,{href:"https://github.com/design-tokens/community-group#design-tokens",children:"the Design Tokens Community Group"})," for more information on Design Tokens themselves."]}),"\n",(0,t.jsx)(n.h2,{id:"fast-frame-design-tokens",children:"FAST Frame Design Tokens"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@microsoft/fast-components"})," have extensive support for predefined design tokens. See ",(0,t.jsx)(n.a,{href:"/docs/1.x/design-systems/fast-frame#configuring-styles",children:"configuring styles"})," for details on adjusting or using the existing tokens, or read on to create your own."]}),"\n",(0,t.jsx)(n.h2,{id:"create-a-token",children:"Create a Token"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Note that this example uses color because it's an easy concept to describe, but we generally discourage the use of fixed colors as they don't benefit from the ",(0,t.jsx)(n.a,{href:"/docs/1.x/design-systems/fast-frame#adaptive-color-system",children:"adaptive color system"})," with support for light and dark mode and other adjustments."]})}),"\n",(0,t.jsx)(n.p,{children:"The first step to using a token is to create it:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { DesignToken } from "@microsoft/fast-foundation";\n\nexport const specialColor = DesignToken.create<string>("special-color");\n'})}),"\n",(0,t.jsx)(n.p,{children:"The type assertion informs what types the token can be set to (and what type will be retrieved), and the name parameter will serve as the CSS Custom Property name (more on that later)."}),"\n",(0,t.jsx)(n.h2,{id:"setting-values",children:"Setting Values"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"DesignToken"})," ",(0,t.jsx)(n.em,{children:"value"})," is set for a ",(0,t.jsx)(n.code,{children:"FASTElement"})," or ",(0,t.jsx)(n.code,{children:"HTMLBodyElement"})," node. This allows tokens to be set to different values for distinct DOM trees:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const ancestor = document.querySelector("my-element") as FASTElement;\nconst descendent = ancestor.querySelector("my-element") as FASTElement;\n\nspecialColor.setValueFor(ancestor, "#FFFFFF");\nspecialColor.setValueFor(descendent, "#F7F7F7");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"setting-a-default-value",children:"Setting a Default Value"}),"\n",(0,t.jsxs)(n.p,{children:["A default value can be set for a token so that the default value is returned from ",(0,t.jsx)(n.code,{children:"getValueFor()"})," in cases where no other token value is found for a node tree."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'specialColor.withDefault("#FFFFFF");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"getting-values",children:"Getting Values"}),"\n",(0,t.jsx)(n.p,{children:"Once the value is set for a node, the value is available to use for that node or any descendent node. The value returned will be the value set for the nearest ancestor (or the element itself)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'specialColor.getValueFor(ancestor); // "#FFFFFF"\nspecialColor.getValueFor(descendent); // "#F7F7F7"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"deleting-values",children:"Deleting Values"}),"\n",(0,t.jsx)(n.p,{children:"Values can be deleted for a node. Doing so causes retrieval of the nearest ancestor's value instead:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'specialColor.deleteValueFor(descendent);\nspecialColor.getValueFor(descendent); // "#FFFFFF"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"css-custom-property-emission",children:"CSS Custom Property Emission"}),"\n",(0,t.jsxs)(n.p,{children:["Unless configured not to, a DesignToken emits a token to CSS automatically whenever the value is set for an element. In the case when a DesignToken is assigned a ",(0,t.jsx)(n.a,{href:"#derived-design-token-values",children:"derived value"}),", the CSS custom property will also be emitted when any dependent tokens change."]}),"\n",(0,t.jsx)(n.h3,{id:"designtoken-root-registration",children:"DesignToken Root Registration"}),"\n",(0,t.jsxs)(n.p,{children:["In order for ",(0,t.jsx)(n.em,{children:"default"})," DesignToken values to be emitted to a CSS custom property, the\nDesignToken root will need to be configured:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"DesignToken.create<number>('my-token').withDefault(2); // This will not immediately emit to a CSS custom property\n\nDesignToken.registerRoot(); // Default values are now emitted\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Invoking ",(0,t.jsx)(n.code,{children:"DesignToken.registerRoot()"})," will cause CSS custom properties to be emitted for the entire document. A root element can also be provided so that CSS custom properties are scoped to that root."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const root = document.querySelector("#root")! as HTMLDivElement;\nDesignToken.registerRoot(root);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["There also exists a ",(0,t.jsx)(n.code,{children:"DesignToken.unregisterRoot()"})," method to remove default custom properties from a root."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// ...\nDesignToken.unregisterRoot(root);\n"})}),"\n",(0,t.jsx)(n.h4,{id:"usage-with-designsystem",children:"Usage With DesignSystem"}),"\n",(0,t.jsxs)(n.p,{children:["If you're using ",(0,t.jsx)(n.code,{children:"DesignSystem"})," to register components and dependencies, then note that ",(0,t.jsx)(n.code,{children:"DesignToken"})," root registration happens automatically when ",(0,t.jsx)(n.code,{children:"DesignSystem.register()"})," is invoked. You can configure the root being registered with ",(0,t.jsx)(n.code,{children:"DesignSystem.withDesignTokenRoot()"})," method:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const root = document.createElement("div");\nDesignSystem.getOrCreate().withDesignTokenRoot(root);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["or you can disable registration by providing ",(0,t.jsx)(n.code,{children:"null"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"DesignSystem.getOrCreate().withDesignTokenRoot(null);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"customizing-css-custom-property-name",children:"Customizing CSS Custom Property Name"}),"\n",(0,t.jsx)(n.p,{children:"A DesignToken can also be configured to emit to a CSS custom property that is different than the provided name by providing a CSS custom property name to the configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'DesignToken.create<number>({\n    name: "my-token", \n    cssCustomPropertyName: "my-css-custom-property-name" // Emits to --my-css-custom-property-name\n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"preventing-css-custom-property-emission",children:"Preventing CSS Custom Property Emission"}),"\n",(0,t.jsxs)(n.p,{children:["A DesignToken can be configured ",(0,t.jsx)(n.strong,{children:"not"})," to emit to a CSS custom property by passing a configuration with ",(0,t.jsx)(n.code,{children:"cssCustomPropertyName"})," set to ",(0,t.jsx)(n.code,{children:"null"})," during creation:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'DesignToken.create<number>({ \n    name: "my-token", \n    cssCustomPropertyName: null \n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"values-with-a-createcss-method",children:"Values with a 'createCSS' method"}),"\n",(0,t.jsxs)(n.p,{children:["It is sometimes useful to be able to set a token to a complex object but still use that value in CSS. If a DesignToken is assigned a value with a ",(0,t.jsx)(n.code,{children:"createCSS"})," method on it, the product of that method will be used when emitting to a CSS custom property instead of the Design Token value itself:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'interface RGBColor {\n    r: number;\n    g: number;\n    b: number;\n    createCSS(): string;\n}\n\nconst extraSpecialColor = DesignToken.create<RGBColor>("extra-special-color");\n\nconst value = {\n    r: 255,\n    g: 0,\n    b: 0,\n    createCSS() {\n        return `rgb(${this.r}, ${this.g}, ${this.b})`;\n    }\n}\n\nextraSpecialColor.setValueFor(descendent, value)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"subscription",children:"Subscription"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"DesignToken"})," supports subscription, notifying a subscriber when a value changes. Subscriptions can subscribe to ",(0,t.jsx)(n.em,{children:"any"})," change throughout the document tree or they can subscribe changes for specific elements."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example: Subscribe to changes for any element"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const subscriber = {\n    handleChange(record) {\n        console.log(`DesignToken ${record.token} changed for element ${record.target}`);\n    }\n};\n\nspecialColor.subscribe(subscriber);\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example: Subscribe to changes a specific element"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'// ...\nconst target = document.body.querySelector("#my-element");\n\nspecialColor.subscribe(subscriber, target);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Subscribers can be unsubscribed using the ",(0,t.jsx)(n.code,{children:"unsubscribe()"})," method:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// ...\nspecialColor.unsubscribe(subscriber);\nspecialColor.unsubscribe(subscriber, target);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"using-design-tokens-in-css",children:"Using Design Tokens in CSS"}),"\n",(0,t.jsx)(n.p,{children:"Any token can be used directly in a FAST stylesheet by using the Design Token as a CSS directive. Assuming the token value has been set for the element or some ancestor element, the value of the token embedded in the stylesheet will be the token value for that element instance."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { css } from "@microsoft/fast-element";\n\nconst styles = css`\n    :host {\n        background: ${specialColor};\n    }\n`\n'})}),"\n",(0,t.jsx)(n.p,{children:"At runtime, the directive is replaced with a CSS custom property, and the Directive ensures that the CSS custom property is added for the element."}),"\n",(0,t.jsx)(n.h2,{id:"derived-design-token-values",children:"Derived Design Token Values"}),"\n",(0,t.jsxs)(n.p,{children:["In the examples above, the design token is always being set to a simple string value. But, we can also set a Design Token to be a function that ",(0,t.jsx)(n.em,{children:"derives"})," a value. A derived value receives the target element as its only argument and must return a value with a type matching the Design Token:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const token = DesignToken.create<number>("token");\ntoken.setValueFor(target, (element) => 12);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The above example is contrived, but the target element can be used to retrieve ",(0,t.jsx)(n.em,{children:"other"})," Design Tokens:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example: A derived token value that uses another design token"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const foregroundColor = DesignToken.create<string>("foreground-color");\n\nforegroundColor.setValueFor(target, (element) => \n     specialColor.getValueFor(element) === "#FFFFFF"\n        ? "#2B2B2B" \n        : "#262626"\n);\n'})}),"\n",(0,t.jsx)(n.p,{children:"For derived Design Token values, any change to dependent tokens will force the derived value to update (and update the CSS custom property if applicable). The same is true if an observable property is used by the derived value:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { observable } from "@microsoft/fast-element";\n\nclass ThemeManager {\n    @observable\n    theme: "blue" | "red" = "blue"\n}\n\nconst themeManager = new ThemeManager();\n\nspecialColor.setValueFor(target, () => themeManager.theme === "blue" ? "#0000FF" : "#FF0000");\n\nthemeManager.theme = "red"; // Forces the derived tokens to re-evaluate and CSS custom properties to update if applicable\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Note: ",(0,t.jsx)(n.em,{children:"volatile"})," token values that conditionally access DesignTokens or other observable properties are currently not supported by DesignToken. If you need to use conditionals,\nensure all DesignTokens or observable properties are accessed outside of conditional blocks. See ",(0,t.jsx)(n.a,{href:"/docs/1.x/fast-element/observables-and-state#observable-features",children:"Observables and State"})," for more information."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"aliasing-design-tokens",children:"Aliasing Design Tokens"}),"\n",(0,t.jsx)(n.p,{children:"In some design systems, Design Tokens may have complex hierarchies with tokens referencing other tokens. This can be accomplished by setting a Design Token to another Design Token."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const specialColor = DesignToken.create<string>("special-color");\nconst buttonSpecialColor = DesignToken.create<string>("button-special-color");\n\nspecialColor.setValueFor(target, "#EDEDED");\nbuttonSpecialColor.setValueFor(target, specialColor);\n\nbuttonSpecialColor.getValueFor(target); // "#EDEDED"\n'})})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},71184:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(14041);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);