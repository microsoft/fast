import React from "react";
import { DataDictionary, MessageSystem } from "@microsoft/fast-tooling";
import * as monaco from "monaco-editor/esm/vs/editor/editor.api";
import { EditorState } from "./editor.props";
export declare const previewBackgroundTransparency: string;
export declare const previewDirection: string;
export declare const previewTheme: string;
declare abstract class Editor<P, S extends EditorState> extends React.Component<P, S> {
    editor: monaco.editor.IStandaloneCodeEditor;
    abstract editorContainerRef: React.RefObject<HTMLDivElement>;
    abstract viewerContainerRef: React.RefObject<HTMLDivElement>;
    viewerContentAreaPadding: number;
    maxViewerHeight: number;
    maxViewerWidth: number;
    fastMessageSystem: MessageSystem;
    fastDesignMessageSystem: MessageSystem;
    monacoValue: string[];
    paneStartClassNames: string;
    paneEndClassNames: string;
    viewerClassNames: string;
    canvasContentClassNames: string;
    menuItemRegionClassNames: string;
    canvasMenuBarClassNames: string;
    mobileMenuBarClassNames: string;
    logoClassNames: string;
    navigationClassNames: string;
    canvasClassNames: string;
    menuBarClassNames: string;
    private adapter;
    private monacoEditorModel;
    private firstRun;
    constructor(props: P);
    setupMonacoEditor: (monacoRef: any) => void;
    createMonacoEditor: (monacoRef: any, alternateContainerRef?: HTMLElement) => void;
    updateEditorContent(dataDictionary: DataDictionary<unknown>): void;
    setViewerToFullSize(alternateContainerRef?: HTMLElement): void;
    getContainerClassNames(): string;
    getCanvasOverlayClassNames(): string;
    handleCanvasOverlayTrigger: () => void;
    handleMobileNavigationTrigger: () => void;
    handleMobileFormTrigger: () => void;
    handleUpdateTheme: () => void;
    handleUpdateDirection: () => void;
    handleUpdateTransparency: () => void;
    handleUpdateHeight: (updatedHeight: number) => void;
    handleUpdateWidth: (updatedWidth: number) => void;
    renderCanvasOverlay(): React.ReactNode;
    renderMobileNavigationTrigger(): React.ReactNode;
    renderMobileFormTrigger(): React.ReactNode;
}
export { Editor, EditorState };
